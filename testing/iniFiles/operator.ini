################################################################################
#                                  General Options                             #
################################################################################
# Overview: uOperator is the service to which you connect to ascertain 
#           connnection information for other services and broadcasts that
#           are more relevant to your aplication.
[uOperator]
# The directory to which module log files will be written.
logFileDirectory = logs

# The server's (IP) address. 
# (e.g., you can obtain this with systemd-resolve --status | grep Current) 
address=127.0.0.1

# Open port(s).  Typically we'll want a block of ports to be open so that 
# we can open as many broadcasts/services as necessary for the application.
# The ports begin at the given port beginning and end (inclusively) on the
# ended ports.  There must be at least 3 ports open:
#   (a) 1 port to allow access the connection information
#   (b) 1 port to which to publish heartbeats
#   (c) 1 port from which to read heartbeat subscriptions
openPortBlockStart = 8080
openPortBlockEnd   = 8090


# This defines the security level for all communication.
# 0 -> Grasslands   There is no security.
# 1 -> Strawhouse   IP addresses are checked against a blacklist.
# 2 -> Woodhouse    IP addresses are checked against a blacklist and
#                   users must provide a user/name and password.
# 3 -> Stonehouse   IP addresses are checked against a blacklist and
#                   users must provided a public key.  Users must also
#                   specify a private key.
# 4 -> Ironhouse    Currently unsupported.  But in this model IP addreses
#                   are checked against a blacklist, users must provide a
#                   public key, and the server public key must then be
#                   authenticated by the user.
securityLevel = 0

# User table for any security level above 0
userTable=~/.local/share/UMPS/tables/user.sqlite3

# The server's public key and private keypair.  This is necessary for the
# stonehouse server since uOperator will be a connection authenticator.
serverPublicKeyFile=~/.local/share/UMPS/keys/serverPublicKey.txt
serverPrivateKeyFile=~/.local/share/UMPS/keys/serverPrivateKey.txt
# Additionally, if you are going to publish heartbeats to yourself you 
# will need the following.
serverPublicKeyFile=~/.local/share/UMPS/keys/serverPublicKey.txt
serverPrivateKeyFile=~/.local/share/UMPS/keys/serverPrivateKey.txt

# If the security level is not grasslands then you can specify where the
# user table, blacklist table, and whitelist table resides ala
#    userTable = /path/to/user.sqlite3
#    blackListTable = /path/to/blacklist.sqlite3
#    whiteListTable = /path/to/whitelist.sqlite3
# By default the tables will be assumed to exist in:
#    ${HOME}/.local/share/UMPS/tables


################################################################################
#                                    Services                                  #
################################################################################
# Overview:
# Services are request/reply mechanisms.  Common service examples are counters
# and waveform caches.  Technically, uOperator is a service but it was already
# specified above.
[ProxyServices:Incrementer]
name = Incrementer

[ProxyServices:PacketCache]
name = PacketCache

################################################################################
#                                End Services                                  #
################################################################################

################################################################################
#                              Data Broadcasts                                 #
################################################################################

################################# Broadcasts ###################################
# Broadcasts are publisher/subscriber mechanisms.  Effectively there are 
# producers who send messages to the frontend and consumers who receive
# messages from the backend.  Consumers will only be able to begin receiving
# messages once they are connected.  It's like the radio - if it isn't in then
# you don't hear anything.
[ProxyBroadcasts:Heartbeat]
# Broadcast name
name = Heartbeat
# This is the address to which a module will connect to send heartbeats
#frontendAddress = tcp://127.0.0:5557
# This is the address to which a module will connect to receive heartbeats
#backendAddress = tcp://127.0.0.1:5558

[ProxyBroadcasts:DataPacket]
name = DataPacket

#################################################################################
#                            End Data Broadcasts                                #
#################################################################################
